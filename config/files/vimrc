set nocompatible
let mapleader=","
let maplocalleader=","
nmap \ <Leader><Leader>
filetype plugin indent on
execute pathogen#infect()
set tags=./.tags;/

"Dont use LaTeXBox indents
let g:LatexBox_custom_indent = 0
let g:tex_indent_brace = 0

"Make views automatic
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview

"Only show quickfix buffer on errors, not warnings
let g:LatexBox_quickfix = 4

"Keep persistent undo trees
if has('persistent_undo')
    set undodir=$HOME/.vim/vimundo
    set undofile
endif

"Don't show scratch preview
set completeopt-=preview

"Number lines
set relativenumber
set number
"Leave 3 lines above, below cursor
set scrolloff=3

"Show line, column number
set ruler
set laststatus=2
set showtabline=1
set display+=lastline

"Make sure backspace works like you'd expect
set backspace=indent,eol,start

"Tab formatting
"4 spaces per tab
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab
set autoindent
"set smartindent

"Set text width to 79
"Wrap after tw
" set tw=79
" set formatoptions+=w

"Highlight characters that exit in column 81.
call matchadd('ColorColumn','\%81v',255)

"A few misc things
syntax on
set smartcase
set ic
set showmatch
set incsearch
set hlsearch
set wildignorecase
set wildmenu

"Keep current buffer at the top for sp, left for vsp
set splitbelow
set splitright
nnoremap <silent> <TAB> :tabn<Cr>
nnoremap <silent> <S-TAB> :tabp<Cr>

"Colorscheme
set t_Co=256
set background=dark
colorscheme molokai

"Yank to clipboard
if has ('macunix')
    nnoremap yy yy"*yy
    vnoremap y ygv"*y
endif

"Automatically follow directory
" set autochdir

"Remove trailing whitespace
nnoremap <silent> <leader>W :%s/\s\+$//e <bar> nohlsearch<CR>

"Reformat current paragraph
"Use with caution
nnoremap <Leader>F gqip :%s/\s\+$//e <bar> nohlsearch <CR><C-o>

"Use semicolon to enter commands
nnoremap ; :

"Toggle Tab Highlighting
map <Leader>t :ToggleTabHi<CR>

"Toggle Trailing Whitespace Highlighting
map <Leader>w :ToggleSpaceHi<CR>

"Toggle spelling
nnoremap <Leader>s :set spell!<CR>

"Save and put vim in the background
nnoremap <leader>z :w<CR><C-z>

"Align in visual
vnoremap <Leader>te :Tab /=<CR>
vnoremap <Leader>tc :Tab /:<CR>

"Clear search highlight
nmap <Leader>/ :nohlsearch<CR>

"Toggle colorcolumn
nnoremap <Leader>c :exec 'set' (&colorcolumn ==# '') ? 'colorcolumn=+1' : 'colorcolumn='<CR>

"Compile, view latex commands
nnoremap <Leader>lw :w<CR> :Latexmk<CR>
nnoremap <Leader>vv :w<CR> :Latexmk<CR> :!open expand('%:r').".pdf"<CR><CR>

"Easily switch sp to vsp
nnoremap <Leader>vs <C-w>t<C-w>K
"Easily switch vsp to sp
nnoremap <Leader>sv <C-w>t<C-w>H

"Disable EX mode
noremap Q <NOP>

"Disable help
noremap <F1> <NOP>
noremap! <F1> <NOP>

"Remap tab to change tab levels in visual mode
vnoremap <TAB> >
vnoremap <S-TAB> <

"Make text scolling constant
" nnoremap j gj
" nnoremap k gk
" nnoremap gj j
" nnoremap gk k

"Allow writing even if you forgot to sudo
cmap w!! w !sudo tee % >/dev/null
cmap x!! x !sudo tee % >/dev/null

if filereadable(expand("$HOME/.vimrc.local"))
    source $HOME/.vimrc.local
endif

"Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
    \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
    \gvy/<C-R><C-R>=substitute(
    \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
    \gV:call setreg('"', old_reg, old_regtype)<CR>

vnoremap <silent> # :<C-U>
    \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
    \gvy?<C-R><C-R>=substitute(
    \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
    \gV:call setreg('"', old_reg, old_regtype)<CR>

let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction
